// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ManageCalculation renders properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ManageCalculation
    description="Blabla"
    match={
        Object {
            "params": Object {
              "token": "ABCD1234",
            },
          }
    }
    members={
        Object {
            "1": Object {
              "id": 1,
              "name": "A guy",
            },
            "2": Object {
              "id": 2,
              "name": "Another guy",
            },
          }
    }
    name="My calculation"
    onUpdateDescription={[Function]}
    onUpdateMemberName={[Function]}
    onUpdateName={[Function]}
    store={
        Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
    }
    storeSubscription={
        Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "unsubscribe": [Function],
          }
    }
    token="ABCD1234"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          Manage calculation:
</h1>,
        <div>
          <label>
                    Name:
          </label>
           
          <EditableInput
                    onClickSave={[Function]}
                    value="My calculation"
          />
</div>,
        <div>
          <label>
                    Description:
          </label>
           
          <EditableInput
                    onClickSave={[Function]}
                    value="Blabla"
          />
</div>,
        <h2>
          Members
</h2>,
        <ul>
          <li>
                    <EditableInput
                              onClickSave={[Function]}
                              value="A guy"
                    />
          </li>
          <li>
                    <EditableInput
                              onClickSave={[Function]}
                              value="Another guy"
                    />
          </li>
</ul>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Manage calculation:",
        },
        "ref": null,
        "rendered": "Manage calculation:",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label>
              Name:
</label>,
            " ",
            <EditableInput
              onClickSave={[Function]}
              value="My calculation"
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Name:",
            },
            "ref": null,
            "rendered": "Name:",
            "type": "label",
          },
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onClickSave": [Function],
              "value": "My calculation",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label>
              Description:
</label>,
            " ",
            <EditableInput
              onClickSave={[Function]}
              value="Blabla"
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Description:",
            },
            "ref": null,
            "rendered": "Description:",
            "type": "label",
          },
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onClickSave": [Function],
              "value": "Blabla",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Members",
        },
        "ref": null,
        "rendered": "Members",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li>
              <EditableInput
                            onClickSave={[Function]}
                            value="A guy"
              />
</li>,
            <li>
              <EditableInput
                            onClickSave={[Function]}
                            value="Another guy"
              />
</li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "host",
            "props": Object {
              "children": <EditableInput
                onClickSave={[Function]}
                value="A guy"
/>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onClickSave": [Function],
                "value": "A guy",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "host",
            "props": Object {
              "children": <EditableInput
                onClickSave={[Function]}
                value="Another guy"
/>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onClickSave": [Function],
                "value": "Another guy",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "li",
          },
        ],
        "type": "ul",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Manage calculation:
</h1>,
          <div>
            <label>
                        Name:
            </label>
             
            <EditableInput
                        onClickSave={[Function]}
                        value="My calculation"
            />
</div>,
          <div>
            <label>
                        Description:
            </label>
             
            <EditableInput
                        onClickSave={[Function]}
                        value="Blabla"
            />
</div>,
          <h2>
            Members
</h2>,
          <ul>
            <li>
                        <EditableInput
                                    onClickSave={[Function]}
                                    value="A guy"
                        />
            </li>
            <li>
                        <EditableInput
                                    onClickSave={[Function]}
                                    value="Another guy"
                        />
            </li>
</ul>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Manage calculation:",
          },
          "ref": null,
          "rendered": "Manage calculation:",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Name:
</label>,
              " ",
              <EditableInput
                onClickSave={[Function]}
                value="My calculation"
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Name:",
              },
              "ref": null,
              "rendered": "Name:",
              "type": "label",
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onClickSave": [Function],
                "value": "My calculation",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Description:
</label>,
              " ",
              <EditableInput
                onClickSave={[Function]}
                value="Blabla"
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Description:",
              },
              "ref": null,
              "rendered": "Description:",
              "type": "label",
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onClickSave": [Function],
                "value": "Blabla",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Members",
          },
          "ref": null,
          "rendered": "Members",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li>
                <EditableInput
                                onClickSave={[Function]}
                                value="A guy"
                />
</li>,
              <li>
                <EditableInput
                                onClickSave={[Function]}
                                value="Another guy"
                />
</li>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "host",
              "props": Object {
                "children": <EditableInput
                  onClickSave={[Function]}
                  value="A guy"
/>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onClickSave": [Function],
                  "value": "A guy",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "host",
              "props": Object {
                "children": <EditableInput
                  onClickSave={[Function]}
                  value="Another guy"
/>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onClickSave": [Function],
                  "value": "Another guy",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "li",
            },
          ],
          "type": "ul",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
